[{"/Users/kyle/dev/clone-social-media/client/src/index.js":"1","/Users/kyle/dev/clone-social-media/client/src/App.js":"2","/Users/kyle/dev/clone-social-media/client/src/components/PostList.js":"3","/Users/kyle/dev/clone-social-media/client/src/components/Post.js":"4","/Users/kyle/dev/clone-social-media/client/src/components/CommentList.js":"5","/Users/kyle/dev/clone-social-media/client/src/components/Comment.js":"6","/Users/kyle/dev/clone-social-media/client/src/components/CreatePost.js":"7","/Users/kyle/dev/clone-social-media/client/src/components/LoginForm.js":"8","/Users/kyle/dev/clone-social-media/client/src/components/NavBar.js":"9","/Users/kyle/dev/clone-social-media/client/src/components/Login.js":"10","/Users/kyle/dev/clone-social-media/client/src/pages/Home.js":"11","/Users/kyle/dev/clone-social-media/client/src/pages/UserProfile.js":"12","/Users/kyle/dev/clone-social-media/client/src/pages/PostPage.js":"13","/Users/kyle/dev/clone-social-media/client/src/pages/RegisterPage.js":"14","/Users/kyle/dev/clone-social-media/client/src/components/Register.js":"15"},{"size":169,"mtime":1609715349717,"results":"16","hashOfConfig":"17"},{"size":1393,"mtime":1609874792188,"results":"18","hashOfConfig":"17"},{"size":1013,"mtime":1609959202759,"results":"19","hashOfConfig":"17"},{"size":843,"mtime":1609960897839,"results":"20","hashOfConfig":"17"},{"size":405,"mtime":1609818056176,"results":"21","hashOfConfig":"17"},{"size":252,"mtime":1609615645298,"results":"22","hashOfConfig":"17"},{"size":828,"mtime":1609875320092,"results":"23","hashOfConfig":"17"},{"size":1037,"mtime":1609719297011,"results":"24","hashOfConfig":"17"},{"size":524,"mtime":1609959368522,"results":"25","hashOfConfig":"17"},{"size":782,"mtime":1609960379262,"results":"26","hashOfConfig":"17"},{"size":249,"mtime":1609818056182,"results":"27","hashOfConfig":"17"},{"size":121,"mtime":1609818056183,"results":"28","hashOfConfig":"17"},{"size":1078,"mtime":1609961181512,"results":"29","hashOfConfig":"17"},{"size":192,"mtime":1609874819165,"results":"30","hashOfConfig":"17"},{"size":2011,"mtime":1609876702144,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"15k0x9t",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/kyle/dev/clone-social-media/client/src/index.js",[],["66","67"],"/Users/kyle/dev/clone-social-media/client/src/App.js",["68","69","70","71"],"import React, { useState } from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport LoginForm from \"./components/LoginForm\";\nimport NavBar from \"./components/NavBar\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport PostPage from \"./pages/PostPage\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000/\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"Bearer \",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n        <Route path=\"/posts/:postId\" component={PostPage} />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/kyle/dev/clone-social-media/client/src/components/PostList.js",[],"/Users/kyle/dev/clone-social-media/client/src/components/Post.js",["72","73","74"],"/Users/kyle/dev/clone-social-media/client/src/components/CommentList.js",[],"/Users/kyle/dev/clone-social-media/client/src/components/Comment.js",[],"/Users/kyle/dev/clone-social-media/client/src/components/CreatePost.js",["75"],"import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport \"./createPost.css\";\nconst CREATE_POST = gql`\n  mutation CreatePost($body: String!) {\n    createPost(body: $body) {\n      id\n      body\n    }\n  }\n`;\nconst CreatePost = (props) => {\n  const [createPost, { data }] = useMutation(CREATE_POST);\n  const [postBody, setPostBody] = useState(\"\");\n\n  return (\n    <div className=\"createPost\">\n      <form\n        onSubmit={async (e) => {\n          createPost({ variables: { body: postBody } });\n          setPostBody(\"\");\n        }}\n      >\n        <textarea\n          onChange={(e) => {\n            setPostBody(e.target.value);\n          }}\n        />\n        <button type=\"submit\">CreatePost</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;\n","/Users/kyle/dev/clone-social-media/client/src/components/LoginForm.js",["76","77"],"import React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst LoginForm = (props) => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.login({\n            variables: {\n              username: formState.username,\n              password: formState.password,\n            },\n          });\n          setFormState({ username: \"\", password: \"\" });\n        }}\n      >\n        <input\n          onChange={async (e) => {\n            setFormState({ ...formState, username: e.target.value });\n          }}\n          placeholder=\"username\"\n        ></input>\n        <input\n          type=\"password\"\n          onChange={(e) => {\n            setFormState({ ...formState, password: e.target.value });\n          }}\n          placeholder=\"password\"\n        ></input>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\nexport default LoginForm;\n","/Users/kyle/dev/clone-social-media/client/src/components/NavBar.js",[],"/Users/kyle/dev/clone-social-media/client/src/components/Login.js",[],"/Users/kyle/dev/clone-social-media/client/src/pages/Home.js",[],"/Users/kyle/dev/clone-social-media/client/src/pages/UserProfile.js",[],"/Users/kyle/dev/clone-social-media/client/src/pages/PostPage.js",[],"/Users/kyle/dev/clone-social-media/client/src/pages/RegisterPage.js",[],"/Users/kyle/dev/clone-social-media/client/src/components/Register.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"86","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":17},{"ruleId":"82","severity":1,"message":"87","line":7,"column":35,"nodeType":"84","messageId":"85","endLine":7,"endColumn":41},{"ruleId":"82","severity":1,"message":"88","line":7,"column":50,"nodeType":"84","messageId":"85","endLine":7,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"89","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"90","line":13,"column":24,"nodeType":"84","messageId":"85","endLine":13,"endColumn":28},{"ruleId":"82","severity":1,"message":"90","line":14,"column":24,"nodeType":"84","messageId":"85","endLine":14,"endColumn":28},{"ruleId":"82","severity":1,"message":"91","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"92","line":2,"column":15,"nodeType":"84","messageId":"85","endLine":2,"endColumn":26},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LoginForm' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'CommentList' is defined but never used.","'data' is assigned a value but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","no-global-assign","no-unsafe-negation"]